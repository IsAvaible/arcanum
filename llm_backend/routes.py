from flask import request, Blueprint
from app import app

from generate import (
    generate,
    vector_db_save_cases,
    vector_db_save_cases_backend
)
from chat import chat

routes = Blueprint("routes", __name__)

### Defining Routes

# generate_case: Endpoint to send all files so the LLM can analyze and process them
# returns json array containing one or more cases
@app.route("/generate_case", methods=["POST"])
def generate_case():
    if request.method == "POST":
        return generate(request)

# chat: Endpoint for searching Cases
# returns complete message generated by the LLM
# implements sockets so the Frontend receives tokens
@app.route("/chat", methods=["POST"])
def chat_langchain():
    if request.method == "POST":
        return chat(request)

@app.route("/save_to_vector_db", methods=["POST"])
def save_to_vector():
    if request.method == "POST":
        return vector_db_save_cases(request)
    
@app.route("/save_to_vector_db_backend", methods=["POST"])
def save_to_vector_db_backend():
    if request.method == "POST":
        return vector_db_save_cases_backend(request)